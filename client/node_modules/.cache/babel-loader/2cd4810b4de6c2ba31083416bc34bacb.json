{"ast":null,"code":"var _jsxFileName = \"E:\\\\Code\\\\FrontEnd\\\\React\\\\planets-stats\\\\src\\\\components\\\\Main\\\\Main.jsx\",\n    _s = $RefreshSig$();\n\nimport { useStyles } from \"./styles\";\nimport { Grid, Container, Typography, Link } from '@material-ui/core';\nimport { useParams } from 'react-router-dom';\nimport { PlanetContext } from '../../contexts/PlanetContext';\nimport { useContext, useEffect, useState } from 'react';\nimport axios from \"axios\";\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport Stats from \"../Stats/Stats\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Main() {\n  _s();\n\n  const {\n    name\n  } = useParams();\n  const {\n    planet,\n    setPlanet\n  } = useContext(PlanetContext);\n  useEffect(() => {\n    const fetchPlanet = async () => {\n      try {\n        const {\n          data\n        } = await axios.get(`http://localhost:8080/planets/?name=${name}`);\n        setPlanet(data);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n\n    fetchPlanet();\n  }, [name, setPlanet]);\n  const colorArray = planet.map(el => el.color);\n  const color = colorArray[0];\n  const classes = useStyles({\n    color\n  });\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        md: 12,\n        lg: 8,\n        className: classes.images,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: planet.map(el => el.images.planet),\n          className: classes.img,\n          alt: \"planet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        md: 12,\n        lg: 4,\n        className: classes.content,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h1\",\n          component: \"h2\",\n          className: classes.title,\n          gutterBottom: true,\n          children: planet.map(el => el.name)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.body,\n          children: planet.map(el => el.overview.content)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            href: \"#\",\n            underline: \"none\",\n            color: \"inherit\",\n            children: [\"Source :\", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: classes.wikipedia,\n              children: [\"Wikipedia\", /*#__PURE__*/_jsxDEV(LaunchIcon, {\n                className: classes.launch\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            underline: \"none\",\n            color: \"inherit\",\n            className: `${classes.btn} ${classes.active}`,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: classes.number,\n              children: \"01\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 29\n            }, this), \"overview\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            underline: \"none\",\n            color: \"inherit\",\n            className: classes.btn,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: classes.number,\n              children: \"02\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this), \"infernal structure\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            underline: \"none\",\n            color: \"inherit\",\n            className: classes.btn,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: classes.number,\n              children: \"03\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 29\n            }, this), \"surface geology\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Stats, {\n      planet: planet\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Main, \"nJUVgZctUbWSBomh2YRB1fyYibk=\", false, function () {\n  return [useParams, useStyles];\n});\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["E:/Code/FrontEnd/React/planets-stats/src/components/Main/Main.jsx"],"names":["useStyles","Grid","Container","Typography","Link","useParams","PlanetContext","useContext","useEffect","useState","axios","LaunchIcon","Stats","Main","name","planet","setPlanet","fetchPlanet","data","get","err","console","error","colorArray","map","el","color","classes","root","images","img","content","title","body","overview","wikipedia","launch","btn","active","number"],"mappings":"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","sourcesContent":["import { useStyles } from \"./styles\";\r\nimport { Grid, Container, Typography, Link } from '@material-ui/core';\r\nimport { useParams } from 'react-router-dom';\r\nimport { PlanetContext } from '../../contexts/PlanetContext';\r\nimport { useContext, useEffect, useState } from 'react';\r\nimport axios from \"axios\";\r\nimport LaunchIcon from '@material-ui/icons/Launch';\r\nimport Stats from \"../Stats/Stats\";\r\n\r\nfunction Main() {\r\n    const { name } = useParams();\r\n    const { planet, setPlanet } = useContext(PlanetContext);\r\n\r\n    useEffect(() => {\r\n        const fetchPlanet = async () => {\r\n            try {\r\n                const { data } = await axios.get(`http://localhost:8080/planets/?name=${name}`);\r\n                setPlanet(data);\r\n\r\n            }\r\n            catch (err) {\r\n                console.error(err);\r\n            }\r\n        }\r\n        fetchPlanet();\r\n    }, [name, setPlanet]);\r\n\r\n    const colorArray = planet.map(el => el.color);\r\n    const color = colorArray[0];\r\n\r\n    const classes = useStyles({color});\r\n    return (\r\n        <Container className={classes.root}>\r\n            <Grid container >\r\n                <Grid item md={12} lg={8} className={classes.images}>\r\n                    <img\r\n                        src={planet.map(el => el.images.planet)}\r\n                        className={classes.img}\r\n                        alt=\"planet\"\r\n                    />\r\n                </Grid>\r\n                <Grid item md={12} lg={4} className={classes.content}>\r\n                    <Typography\r\n                        variant=\"h1\"\r\n                        component=\"h2\"\r\n                        className={classes.title}\r\n                        gutterBottom\r\n                    >\r\n                        {planet.map(el => el.name)}\r\n                    </Typography>\r\n                    <Typography\r\n                        className={classes.body}\r\n                    >\r\n                        {planet.map(el => el.overview.content)}\r\n                    </Typography>\r\n                    <Typography \r\n                        variant=\"h6\"\r\n                    >\r\n                        <Link\r\n                            href=\"#\"\r\n                            underline=\"none\"\r\n                            color='inherit'\r\n                        >\r\n                            Source :\r\n                            <span className={classes.wikipedia}>\r\n                                Wikipedia\r\n                                <LaunchIcon className={classes.launch} />\r\n                            </span>\r\n                        </Link>\r\n                    </Typography>\r\n                    <Typography variant=\"h6\">\r\n                        <Link\r\n                            underline=\"none\"\r\n                            color='inherit'\r\n                            className={`${classes.btn} ${classes.active}`}\r\n                        >\r\n                            <span className={classes.number}>\r\n                                01\r\n                            </span>overview\r\n                        </Link>\r\n                        <Link\r\n                            underline=\"none\"\r\n                            color='inherit'\r\n                            className={classes.btn}\r\n                        >\r\n                            <span className={classes.number}>\r\n                                02\r\n                            </span>infernal structure\r\n                        </Link>\r\n                        <Link\r\n                            underline=\"none\"\r\n                            color='inherit'\r\n                            className={classes.btn}\r\n                        >\r\n                            <span className={classes.number}>\r\n                                03\r\n                            </span>surface geology\r\n                        </Link>\r\n                    </Typography>\r\n                </Grid>\r\n            </Grid>\r\n            <Stats planet={planet}/>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Main\r\n"]},"metadata":{},"sourceType":"module"}