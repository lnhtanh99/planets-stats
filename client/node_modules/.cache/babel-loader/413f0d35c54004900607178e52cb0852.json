{"ast":null,"code":"var _jsxFileName = \"E:\\\\Code\\\\FrontEnd\\\\React\\\\planets-stats\\\\src\\\\components\\\\Navbar\\\\Navbar.jsx\",\n    _s = $RefreshSig$();\n\nimport { AppBar, Toolbar, Typography, Link } from '@material-ui/core';\nimport { useStyles } from './styles';\nimport { fetchData } from '../../api';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Navbar() {\n  _s();\n\n  const classes = useStyles();\n  const [planets, setPlanets] = useState([]);\n  useEffect(() => {\n    const fetchPlanets = async () => {\n      const fetchedPlanets = await fetchData();\n      setPlanets(fetchedPlanets);\n    };\n\n    fetchPlanets();\n  }, []);\n  console.log(planets);\n  return /*#__PURE__*/_jsxDEV(AppBar, {\n    position: \"static\",\n    color: \"transparent\",\n    elevation: 0,\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Toolbar, {\n      className: classes.wrapper,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        component: \"h1\",\n        className: classes.title,\n        children: \"the planets\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: planets && planets.map((planet, index) => /*#__PURE__*/_jsxDEV(Link, {\n          href: \"#\",\n          underline: \"none\",\n          color: \"inherit\",\n          className: classes.link,\n          children: planet.name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Navbar, \"388F5NVAfF7XgdaA1njLkFHXcSY=\", false, function () {\n  return [useStyles];\n});\n\n_c = Navbar;\nexport default Navbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"sources":["E:/Code/FrontEnd/React/planets-stats/src/components/Navbar/Navbar.jsx"],"names":["AppBar","Toolbar","Typography","Link","useStyles","fetchData","useEffect","useState","Navbar","classes","planets","setPlanets","fetchPlanets","fetchedPlanets","console","log","root","wrapper","title","map","planet","index","link","name"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,OAAjB,EAA0BC,UAA1B,EAAsCC,IAAtC,QAAkD,mBAAlD;AACA,SAASC,SAAT,QAA0B,UAA1B;AACA,SAASC,SAAT,QAA0B,WAA1B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;AAEA,SAASC,MAAT,GAAkB;AAAA;;AACd,QAAMC,OAAO,GAAGL,SAAS,EAAzB;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,EAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMM,YAAY,GAAG,YAAY;AAC7B,YAAMC,cAAc,GAAG,MAAMR,SAAS,EAAtC;AACAM,MAAAA,UAAU,CAACE,cAAD,CAAV;AACH,KAHD;;AAKAD,IAAAA,YAAY;AACf,GAPQ,EAON,EAPM,CAAT;AASAE,EAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ;AAEA,sBACI,QAAC,MAAD;AACI,IAAA,QAAQ,EAAC,QADb;AAEI,IAAA,KAAK,EAAC,aAFV;AAGI,IAAA,SAAS,EAAE,CAHf;AAII,IAAA,SAAS,EAAED,OAAO,CAACO,IAJvB;AAAA,2BAMI,QAAC,OAAD;AAAS,MAAA,SAAS,EAAEP,OAAO,CAACQ,OAA5B;AAAA,8BACI,QAAC,UAAD;AACI,QAAA,OAAO,EAAC,IADZ;AAEI,QAAA,SAAS,EAAC,IAFd;AAGI,QAAA,SAAS,EAAER,OAAO,CAACS,KAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAQI,QAAC,UAAD;AAAA,kBAEQR,OAAO,IAAIA,OAAO,CAACS,GAAR,CAAY,CAACC,MAAD,EAASC,KAAT,kBACnB,QAAC,IAAD;AACI,UAAA,IAAI,EAAC,GADT;AAEI,UAAA,SAAS,EAAC,MAFd;AAGI,UAAA,KAAK,EAAC,SAHV;AAII,UAAA,SAAS,EAAEZ,OAAO,CAACa,IAJvB;AAAA,oBAOMF,MAAM,CAACG;AAPb,WAKSF,KALT;AAAA;AAAA;AAAA;AAAA,gBADO;AAFnB;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAkCH;;GAjDQb,M;UACWJ,S;;;KADXI,M;AAmDT,eAAeA,MAAf","sourcesContent":["import { AppBar, Toolbar, Typography, Link } from '@material-ui/core'\r\nimport { useStyles } from './styles'\r\nimport { fetchData } from '../../api';\r\nimport { useEffect, useState } from 'react';\r\n\r\nfunction Navbar() {\r\n    const classes = useStyles();\r\n    const [planets, setPlanets] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchPlanets = async () => {\r\n            const fetchedPlanets = await fetchData();\r\n            setPlanets(fetchedPlanets);\r\n        }\r\n\r\n        fetchPlanets();\r\n    }, []);\r\n\r\n    console.log(planets);\r\n\r\n    return (\r\n        <AppBar\r\n            position=\"static\"\r\n            color=\"transparent\"\r\n            elevation={0}\r\n            className={classes.root}\r\n        >\r\n            <Toolbar className={classes.wrapper}>\r\n                <Typography\r\n                    variant=\"h5\"\r\n                    component=\"h1\"\r\n                    className={classes.title}\r\n                >\r\n                    the planets\r\n                </Typography>\r\n                <Typography>\r\n                    {\r\n                        planets && planets.map((planet, index) => (\r\n                            <Link\r\n                                href=\"#\"\r\n                                underline=\"none\"\r\n                                color=\"inherit\"\r\n                                className={classes.link}\r\n                                key={index}\r\n                            >\r\n                                { planet.name }\r\n                            </Link>\r\n                        ))\r\n                    }\r\n\r\n                </Typography>\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n"]},"metadata":{},"sourceType":"module"}