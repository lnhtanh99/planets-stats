{"ast":null,"code":"var _jsxFileName = \"E:\\\\Code\\\\FrontEnd\\\\React\\\\planets-stats\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport ReactAnime from 'react-animejs';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [num, setNum] = useState(100);\n  const [delay, setDelay] = useState(3000);\n  const {\n    Anime\n  } = ReactAnime;\n  const vw = Math.max(document.documentElement.clientWidth, window.innerWidth);\n  const vh = Math.max(document.documentElement.clientHeight, window.innerHeight);\n\n  const randomRadius = () => {\n    return Math.random() * 0.7 + 0.6;\n  };\n\n  const getRandomX = () => {\n    return Math.floor(Math.random() * Math.floor(vw)).toString();\n  };\n\n  const getRandomY = () => {\n    return Math.floor(Math.random() * Math.floor(vh)).toString();\n  };\n\n  const randomDelay = () => {\n    setDelay(Math.floor(Math.random() * Math.floor(3000)).toString());\n  };\n\n  useEffect(() => {\n    randomDelay();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Anime, {\n      initial: [{\n        targets: \".sky\",\n        opacity: [{\n          duration: 700,\n          value: \"0\"\n        }, {\n          duration: 700,\n          value: \"1\"\n        }],\n        easing: \"linear\",\n        loop: true,\n        delay: delay\n      }],\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        className: \"sky\",\n        children: [...Array(num)].map((x, y) => /*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: getRandomX(),\n          cy: getRandomY(),\n          r: randomRadius(),\n          stroke: \"none\",\n          strokeWidth: \"0\",\n          fill: \"white\",\n          className: \"star\"\n        }, y, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"N222Kp+rEPWUVOzO8bOOKSBhbtI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["E:/Code/FrontEnd/React/planets-stats/src/App.js"],"names":["ReactAnime","useState","useEffect","App","num","setNum","delay","setDelay","Anime","vw","Math","max","document","documentElement","clientWidth","window","innerWidth","vh","clientHeight","innerHeight","randomRadius","random","getRandomX","floor","toString","getRandomY","randomDelay","targets","opacity","duration","value","easing","loop","Array","map","x","y"],"mappings":";;;AAAA,OAAOA,UAAP,MAAuB,eAAvB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBJ,QAAQ,CAAC,GAAD,CAA9B;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM;AAAEO,IAAAA;AAAF,MAAYR,UAAlB;AAEA,QAAMS,EAAE,GAAGC,IAAI,CAACC,GAAL,CAASC,QAAQ,CAACC,eAAT,CAAyBC,WAAlC,EAA+CC,MAAM,CAACC,UAAtD,CAAX;AACA,QAAMC,EAAE,GAAGP,IAAI,CAACC,GAAL,CAASC,QAAQ,CAACC,eAAT,CAAyBK,YAAlC,EAAgDH,MAAM,CAACI,WAAvD,CAAX;;AAEA,QAAMC,YAAY,GAAG,MAAM;AACzB,WAAOV,IAAI,CAACW,MAAL,KAAgB,GAAhB,GAAsB,GAA7B;AACD,GAFD;;AAIA,QAAMC,UAAU,GAAG,MAAM;AACvB,WAAOZ,IAAI,CAACa,KAAL,CAAWb,IAAI,CAACW,MAAL,KAAgBX,IAAI,CAACa,KAAL,CAAWd,EAAX,CAA3B,EAA2Ce,QAA3C,EAAP;AACD,GAFD;;AAIA,QAAMC,UAAU,GAAG,MAAM;AACvB,WAAOf,IAAI,CAACa,KAAL,CAAWb,IAAI,CAACW,MAAL,KAAgBX,IAAI,CAACa,KAAL,CAAWN,EAAX,CAA3B,EAA2CO,QAA3C,EAAP;AACD,GAFD;;AAIA,QAAME,WAAW,GAAG,MAAM;AACxBnB,IAAAA,QAAQ,CAACG,IAAI,CAACa,KAAL,CAAWb,IAAI,CAACW,MAAL,KAAgBX,IAAI,CAACa,KAAL,CAAW,IAAX,CAA3B,EAA6CC,QAA7C,EAAD,CAAR;AACD,GAFD;;AAIAtB,EAAAA,SAAS,CAAC,MAAM;AACdwB,IAAAA,WAAW;AACZ,GAFQ,EAEP,EAFO,CAAT;AAGA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE,QAAC,KAAD;AACE,MAAA,OAAO,EAAE,CACP;AACEC,QAAAA,OAAO,EAAE,MADX;AAEEC,QAAAA,OAAO,EAAE,CACP;AACEC,UAAAA,QAAQ,EAAE,GADZ;AAEEC,UAAAA,KAAK,EAAE;AAFT,SADO,EAKP;AACED,UAAAA,QAAQ,EAAE,GADZ;AAEEC,UAAAA,KAAK,EAAE;AAFT,SALO,CAFX;AAYEC,QAAAA,MAAM,EAAE,QAZV;AAaEC,QAAAA,IAAI,EAAE,IAbR;AAcE1B,QAAAA,KAAK,EAAEA;AAdT,OADO,CADX;AAAA,6BAoBE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,kBAEI,CAAC,GAAG2B,KAAK,CAAC7B,GAAD,CAAT,EAAgB8B,GAAhB,CAAoB,CAACC,CAAD,EAAIC,CAAJ,kBAClB;AACE,UAAA,EAAE,EAAEd,UAAU,EADhB;AAEE,UAAA,EAAE,EAAEG,UAAU,EAFhB;AAGE,UAAA,CAAC,EAAEL,YAAY,EAHjB;AAIE,UAAA,MAAM,EAAC,MAJT;AAKE,UAAA,WAAW,EAAC,GALd;AAME,UAAA,IAAI,EAAC,OANP;AAQE,UAAA,SAAS,EAAC;AARZ,WAOOgB,CAPP;AAAA;AAAA;AAAA;AAAA,gBADF;AAFJ;AAAA;AAAA;AAAA;AAAA;AApBF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAyCD;;GApEQjC,G;;KAAAA,G;AAsET,eAAeA,GAAf","sourcesContent":["import ReactAnime from 'react-animejs'\nimport { useState, useEffect } from 'react';\n\nfunction App() {\n  const [num, setNum] = useState(100);\n  const [delay, setDelay] = useState(3000);\n  const { Anime } = ReactAnime;\n\n  const vw = Math.max(document.documentElement.clientWidth, window.innerWidth);\n  const vh = Math.max(document.documentElement.clientHeight, window.innerHeight);\n\n  const randomRadius = () => {\n    return Math.random() * 0.7 + 0.6;\n  }\n\n  const getRandomX = () => {\n    return Math.floor(Math.random() * Math.floor(vw)).toString();\n  }\n\n  const getRandomY = () => {\n    return Math.floor(Math.random() * Math.floor(vh)).toString();\n  }\n\n  const randomDelay = () => {\n    setDelay(Math.floor(Math.random() * Math.floor(3000)).toString()); \n  }\n\n  useEffect(() => {\n    randomDelay();\n  },[])\n  return (\n    <div className=\"App\">\n      <Anime\n        initial={[\n          {\n            targets: \".sky\",\n            opacity: [\n              {\n                duration: 700,\n                value: \"0\"\n              },\n              {\n                duration: 700,\n                value: \"1\"\n              }\n            ],\n            easing: \"linear\",\n            loop: true,\n            delay: delay,\n          }\n        ]}\n      >\n        <svg className=\"sky\">\n          {\n            [...Array(num)].map((x, y) => (\n              <circle\n                cx={getRandomX()}\n                cy={getRandomY()}\n                r={randomRadius()}\n                stroke=\"none\"\n                strokeWidth=\"0\"\n                fill=\"white\"\n                key={y}\n                className=\"star\"\n              />\n            ))\n          }\n        </svg>\n      </Anime>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}