{"ast":null,"code":"import _regeneratorRuntime from\"E:/Code/FrontEnd/React/planets-stats/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"E:/Code/FrontEnd/React/planets-stats/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import axios from\"axios\";var urlAllPlanets='https://planet-json.herokuapp.com/planets';var singlePlanetURL='https://planet-json.herokuapp.com/planets/?name=';export var fetchData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _yield$axios$get,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return axios.get(urlAllPlanets);case 3:_yield$axios$get=_context.sent;data=_yield$axios$get.data;return _context.abrupt(\"return\",data);case 8:_context.prev=8;_context.t0=_context[\"catch\"](0);console.error(_context.t0);case 11:case\"end\":return _context.stop();}}},_callee,null,[[0,8]]);}));return function fetchData(){return _ref.apply(this,arguments);};}();export var fetchSinglePlanet=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(planet){var url,_yield$axios$get2,data;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:url=\"\".concat(singlePlanetURL).concat(planet);_context2.prev=1;_context2.next=4;return axios.get(url);case 4:_yield$axios$get2=_context2.sent;data=_yield$axios$get2.data;return _context2.abrupt(\"return\",data);case 9:_context2.prev=9;_context2.t0=_context2[\"catch\"](1);console.error(_context2.t0);case 12:case\"end\":return _context2.stop();}}},_callee2,null,[[1,9]]);}));return function fetchSinglePlanet(_x){return _ref2.apply(this,arguments);};}();","map":{"version":3,"sources":["E:/Code/FrontEnd/React/planets-stats/src/api/index.js"],"names":["axios","urlAllPlanets","singlePlanetURL","fetchData","get","data","console","error","fetchSinglePlanet","planet","url"],"mappings":"mTAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,GAAMC,CAAAA,aAAa,CAAG,2CAAtB,CACA,GAAMC,CAAAA,eAAe,CAAG,kDAAxB,CAEA,MAAO,IAAMC,CAAAA,SAAS,0FAAG,mMAEMH,CAAAA,KAAK,CAACI,GAAN,CAAUH,aAAV,CAFN,uCAETI,IAFS,kBAETA,IAFS,iCAGVA,IAHU,0DAMjBC,OAAO,CAACC,KAAR,cANiB,oEAAH,kBAATJ,CAAAA,SAAS,0CAAf,CAUP,MAAO,IAAMK,CAAAA,iBAAiB,2FAAG,kBAAMC,MAAN,qJACvBC,GADuB,WACdR,eADc,SACIO,MADJ,0CAGFT,CAAAA,KAAK,CAACI,GAAN,CAAUM,GAAV,CAHE,yCAGjBL,IAHiB,mBAGjBA,IAHiB,kCAIlBA,IAJkB,6DAOzBC,OAAO,CAACC,KAAR,eAPyB,sEAAH,kBAAjBC,CAAAA,iBAAiB,6CAAvB","sourcesContent":["import axios from \"axios\";\r\n\r\nconst urlAllPlanets = 'https://planet-json.herokuapp.com/planets';\r\nconst singlePlanetURL = 'https://planet-json.herokuapp.com/planets/?name=';\r\n\r\nexport const fetchData = async() => {\r\n    try {\r\n        const { data } = await axios.get(urlAllPlanets);\r\n        return data;\r\n    }\r\n    catch (err) {\r\n        console.error(err);\r\n    }\r\n}\r\n\r\nexport const fetchSinglePlanet = async(planet) => {\r\n    const url = `${singlePlanetURL}${planet}`;\r\n    try {\r\n        const { data } = await axios.get(url);\r\n        return data;\r\n    }\r\n    catch (err) {\r\n        console.error(err);\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}