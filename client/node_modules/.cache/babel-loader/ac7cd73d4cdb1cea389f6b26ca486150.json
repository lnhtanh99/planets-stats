{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\FrontEnd\\\\React\\\\planets-stats\\\\client\\\\src\\\\contexts\\\\PlanetContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from \"react\";\nimport { fetchSinglePlanet } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PlanetContext = /*#__PURE__*/createContext();\n\nfunction PlanetProvider({\n  children\n}) {\n  _s();\n\n  const [planet, setPlanet] = useState({});\n\n  const handleClick = async id => {\n    const fetchPlanetInfo = await fetchSinglePlanet(id);\n    setPlanet(fetchPlanetInfo);\n  };\n\n  return /*#__PURE__*/_jsxDEV(PlanetContext.Provider, {\n    value: {\n      planet,\n      setPlanet,\n      handleClick\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PlanetProvider, \"0aHQszSh5nFuvvH74Pbn7GNYwTg=\");\n\n_c = PlanetProvider;\nexport default PlanetProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlanetProvider\");","map":{"version":3,"sources":["D:/Code/FrontEnd/React/planets-stats/client/src/contexts/PlanetContext.js"],"names":["createContext","useState","fetchSinglePlanet","PlanetContext","PlanetProvider","children","planet","setPlanet","handleClick","id","fetchPlanetInfo"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,SAASC,iBAAT,QAAkC,QAAlC;;AAEA,OAAO,MAAMC,aAAa,gBAAGH,aAAa,EAAnC;;AAEP,SAASI,cAAT,CAAwB;AAAEC,EAAAA;AAAF,CAAxB,EAAsC;AAAA;;AAClC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMO,WAAW,GAAG,MAAMC,EAAN,IAAa;AAC7B,UAAMC,eAAe,GAAG,MAAMR,iBAAiB,CAACO,EAAD,CAA/C;AACAF,IAAAA,SAAS,CAACG,eAAD,CAAT;AACH,GAHD;;AAKA,sBACI,QAAC,aAAD,CAAe,QAAf;AACI,IAAA,KAAK,EAAE;AAAEJ,MAAAA,MAAF;AAAUC,MAAAA,SAAV;AAAqBC,MAAAA;AAArB,KADX;AAAA,cAGMH;AAHN;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GAfQD,c;;KAAAA,c;AAiBT,eAAeA,cAAf","sourcesContent":["import { createContext, useState } from \"react\";\r\nimport { fetchSinglePlanet } from '../api';\r\n\r\nexport const PlanetContext = createContext();\r\n\r\nfunction PlanetProvider({ children }) {\r\n    const [planet, setPlanet] = useState({});\r\n\r\n    const handleClick = async(id) => {\r\n        const fetchPlanetInfo = await fetchSinglePlanet(id);\r\n        setPlanet(fetchPlanetInfo);\r\n    }\r\n\r\n    return (\r\n        <PlanetContext.Provider\r\n            value={{ planet, setPlanet, handleClick }}\r\n        >\r\n            { children }\r\n        </PlanetContext.Provider>\r\n    )\r\n}\r\n\r\nexport default PlanetProvider\r\n"]},"metadata":{},"sourceType":"module"}