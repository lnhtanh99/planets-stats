{"ast":null,"code":"var _jsxFileName = \"E:\\\\Code\\\\FrontEnd\\\\React\\\\planets-stats\\\\src\\\\components\\\\Main\\\\Main.jsx\",\n    _s = $RefreshSig$();\n\nimport { useStyles } from \"./styles\";\nimport { Grid, Container, Typography, Link } from '@material-ui/core';\nimport { useParams } from 'react-router-dom';\nimport { PlanetContext } from '../../contexts/PlanetContext';\nimport { useContext, useEffect, useState } from 'react';\nimport axios from \"axios\";\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport Stats from \"../Stats/Stats\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Main() {\n  _s();\n\n  const {\n    name\n  } = useParams();\n  const {\n    planet,\n    setPlanet\n  } = useContext(PlanetContext);\n  const [overview, setOverview] = useState(true);\n  const [internal, setInternal] = useState(false);\n  const [geology, setGeology] = useState(false);\n  useEffect(() => {\n    const fetchPlanet = async () => {\n      if (name) {\n        try {\n          const {\n            data\n          } = await axios.get(`https://planet-json.herokuapp.com/planets/?name=${name}`);\n          setPlanet(data);\n        } catch (err) {\n          console.error(err);\n        }\n      } else {\n        try {\n          const {\n            data\n          } = await axios.get(`https://planet-json.herokuapp.com/planets/?name=Earth`);\n          setPlanet(data);\n        } catch (err) {\n          console.error(err);\n        }\n      }\n    };\n\n    fetchPlanet();\n  }, [name, setPlanet]);\n\n  const handleClick = type => {\n    if (type === 'overview') {\n      setOverview(true);\n      setInternal(false);\n      setGeology(false);\n    } else if (type === 'internal') {\n      setOverview(false);\n      setInternal(true);\n      setGeology(false);\n    } else {\n      setOverview(false);\n      setInternal(false);\n      setGeology(true);\n    }\n  };\n\n  const colorArray = planet.map(el => el.color);\n  const color = colorArray[0];\n  const classes = useStyles({\n    color\n  });\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        md: 8,\n        lg: 8,\n        mx: \"auto\",\n        className: classes.images,\n        children: [overview && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: planet.map(el => el.images.planet),\n          className: classes.img,\n          alt: \"planet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 34\n        }, this), internal && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: planet.map(el => el.images.internal),\n          className: classes.img,\n          alt: \"planet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 34\n        }, this), geology && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.imgWrap,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: planet.map(el => el.images.geology),\n            className: classes.smallImg,\n            alt: \"planet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: planet.map(el => el.images.planet),\n            className: classes.img,\n            alt: \"planet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        md: 4,\n        lg: 4,\n        className: classes.content,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h1\",\n          component: \"h2\",\n          className: classes.title,\n          gutterBottom: true,\n          children: planet.map(el => el.name)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.body,\n          children: [overview && planet.map(el => el.overview.content), internal && planet.map(el => el.structure.content), geology && planet.map(el => el.geology.content)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: [overview && /*#__PURE__*/_jsxDEV(Link, {\n            href: planet.map(el => el.overview.source),\n            underline: \"none\",\n            color: \"inherit\",\n            children: [\"Source :\", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: classes.wikipedia,\n              children: [\"Wikipedia\", /*#__PURE__*/_jsxDEV(LaunchIcon, {\n                className: classes.launch\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 38\n          }, this), internal && /*#__PURE__*/_jsxDEV(Link, {\n            href: planet.map(el => el.structure.source),\n            underline: \"none\",\n            color: \"inherit\",\n            children: [\"Source :\", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: classes.wikipedia,\n              children: [\"Wikipedia\", /*#__PURE__*/_jsxDEV(LaunchIcon, {\n                className: classes.launch\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 38\n          }, this), geology && /*#__PURE__*/_jsxDEV(Link, {\n            href: planet.map(el => el.geology.source),\n            underline: \"none\",\n            color: \"inherit\",\n            children: [\"Source :\", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: classes.wikipedia,\n              children: [\"Wikipedia\", /*#__PURE__*/_jsxDEV(LaunchIcon, {\n                className: classes.launch\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            onClick: () => handleClick('overview'),\n            underline: \"none\",\n            color: \"inherit\",\n            className: overview ? `${classes.btn} ${classes.active}` : classes.btn,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: classes.number,\n              children: \"01\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 29\n            }, this), \"overview\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            onClick: () => handleClick('internal'),\n            underline: \"none\",\n            color: \"inherit\",\n            className: internal ? `${classes.btn} ${classes.active}` : classes.btn,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: classes.number,\n              children: \"02\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 29\n            }, this), \"internal structure\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            onClick: () => handleClick('geology'),\n            underline: \"none\",\n            color: \"inherit\",\n            className: geology ? `${classes.btn} ${classes.active}` : classes.btn,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: classes.number,\n              children: \"03\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 29\n            }, this), \"surface geology\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Stats, {\n      planet: planet\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Main, \"YtlpmV+pJdsGHjg+To0TtJFdRwI=\", false, function () {\n  return [useParams, useStyles];\n});\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["E:/Code/FrontEnd/React/planets-stats/src/components/Main/Main.jsx"],"names":["useStyles","Grid","Container","Typography","Link","useParams","PlanetContext","useContext","useEffect","useState","axios","LaunchIcon","Stats","Main","name","planet","setPlanet","overview","setOverview","internal","setInternal","geology","setGeology","fetchPlanet","data","get","err","console","error","handleClick","type","colorArray","map","el","color","classes","root","images","img","imgWrap","smallImg","content","title","body","structure","source","wikipedia","launch","btn","active","number"],"mappings":"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","sourcesContent":["import { useStyles } from \"./styles\";\r\nimport { Grid, Container, Typography, Link } from '@material-ui/core';\r\nimport { useParams } from 'react-router-dom';\r\nimport { PlanetContext } from '../../contexts/PlanetContext';\r\nimport { useContext, useEffect, useState } from 'react';\r\nimport axios from \"axios\";\r\nimport LaunchIcon from '@material-ui/icons/Launch';\r\nimport Stats from \"../Stats/Stats\";\r\n\r\nfunction Main() {\r\n    const { name } = useParams();\r\n    const { planet, setPlanet } = useContext(PlanetContext);\r\n    const [overview, setOverview] = useState(true);\r\n    const [internal, setInternal] = useState(false);\r\n    const [geology, setGeology] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetchPlanet = async () => {\r\n            if(name){\r\n                try {\r\n                    const { data } = await axios.get(`https://planet-json.herokuapp.com/planets/?name=${name}`);\r\n                    setPlanet(data);\r\n    \r\n                }\r\n                catch (err) {\r\n                    console.error(err);\r\n                }\r\n            } else {\r\n                try {\r\n                    const { data } = await axios.get(`https://planet-json.herokuapp.com/planets/?name=Earth`);\r\n                    setPlanet(data);\r\n    \r\n                }\r\n                catch (err) {\r\n                    console.error(err);\r\n                }\r\n            }\r\n\r\n        }\r\n        fetchPlanet();\r\n    }, [name, setPlanet]);\r\n\r\n    const handleClick = (type) => {\r\n        if (type === 'overview') {\r\n            setOverview(true);\r\n            setInternal(false);\r\n            setGeology(false);\r\n        } else if (type === 'internal') {\r\n            setOverview(false);\r\n            setInternal(true);\r\n            setGeology(false);\r\n        } else {\r\n            setOverview(false);\r\n            setInternal(false);\r\n            setGeology(true);\r\n        }\r\n    }\r\n\r\n    const colorArray = planet.map(el => el.color);\r\n    const color = colorArray[0];\r\n\r\n    const classes = useStyles({ color });\r\n    return (\r\n        <Container className={classes.root}>\r\n            <Grid container >\r\n                <Grid item md={8} lg={8} mx=\"auto\" className={classes.images}>\r\n                    {overview && <img src={planet.map(el => el.images.planet)} className={classes.img} alt=\"planet\" />}\r\n                    {internal && <img src={planet.map(el => el.images.internal)} className={classes.img} alt=\"planet\" />}\r\n                    {geology &&\r\n                        <div className={classes.imgWrap}>\r\n                            <img src={planet.map(el => el.images.geology)}\r\n                                className={classes.smallImg}\r\n                                alt=\"planet\" />\r\n                            <img src={planet.map(el => el.images.planet)}\r\n                                className={classes.img}\r\n                                alt=\"planet\" />\r\n                        </div>\r\n                    }\r\n                </Grid>\r\n                <Grid item md={4} lg={4} className={classes.content}>\r\n                    <Typography\r\n                        variant=\"h1\"\r\n                        component=\"h2\"\r\n                        className={classes.title}\r\n                        gutterBottom\r\n                    >\r\n                        {planet.map(el => el.name)}\r\n                    </Typography>\r\n                    <Typography\r\n                        className={classes.body}\r\n                    >\r\n                        {overview && planet.map(el => el.overview.content)}\r\n                        {internal && planet.map(el => el.structure.content)}\r\n                        {geology && planet.map(el => el.geology.content)}\r\n                    </Typography>\r\n                    <Typography\r\n                        variant=\"h6\"\r\n                    >\r\n                        {overview && <Link\r\n                            href={planet.map(el => el.overview.source)}\r\n                            underline=\"none\"\r\n                            color='inherit'\r\n                        >\r\n                            Source :\r\n                            <span className={classes.wikipedia}>\r\n                                Wikipedia\r\n                                <LaunchIcon className={classes.launch} />\r\n                            </span>\r\n                        </Link>\r\n                        }\r\n                        {internal && <Link\r\n                            href={planet.map(el => el.structure.source)}\r\n                            underline=\"none\"\r\n                            color='inherit'\r\n                        >\r\n                            Source :\r\n                            <span className={classes.wikipedia}>\r\n                                Wikipedia\r\n                                <LaunchIcon className={classes.launch} />\r\n                            </span>\r\n                        </Link>\r\n                        }\r\n                        {geology && <Link\r\n                            href={planet.map(el => el.geology.source)}\r\n                            underline=\"none\"\r\n                            color='inherit'\r\n                        >\r\n                            Source :\r\n                            <span className={classes.wikipedia}>\r\n                                Wikipedia\r\n                                <LaunchIcon className={classes.launch} />\r\n                            </span>\r\n                        </Link>\r\n                        }\r\n                    </Typography>\r\n                    <Typography variant=\"h6\">\r\n                        <Link\r\n                            onClick={() => handleClick('overview')}\r\n                            underline=\"none\"\r\n                            color='inherit'\r\n                            className={overview ? `${classes.btn} ${classes.active}` : classes.btn}\r\n                        >\r\n                            <span className={classes.number}>\r\n                                01\r\n                            </span>overview\r\n                        </Link>\r\n                        <Link\r\n                            onClick={() => handleClick('internal')}\r\n                            underline=\"none\"\r\n                            color='inherit'\r\n                            className={internal ? `${classes.btn} ${classes.active}` : classes.btn}\r\n                        >\r\n                            <span className={classes.number}>\r\n                                02\r\n                            </span>internal structure\r\n                        </Link>\r\n                        <Link\r\n                            onClick={() => handleClick('geology')}\r\n                            underline=\"none\"\r\n                            color='inherit'\r\n                            className={geology ? `${classes.btn} ${classes.active}` : classes.btn}\r\n                        >\r\n                            <span className={classes.number}>\r\n                                03\r\n                            </span>surface geology\r\n                        </Link>\r\n                    </Typography>\r\n                </Grid>\r\n            </Grid>\r\n            <Stats planet={planet} />\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Main\r\n"]},"metadata":{},"sourceType":"module"}