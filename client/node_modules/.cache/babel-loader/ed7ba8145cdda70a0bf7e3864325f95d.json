{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\FrontEnd\\\\React\\\\planets-stats\\\\client\\\\src\\\\components\\\\Navbar\\\\Navbar.jsx\",\n    _s = $RefreshSig$();\n\nimport { AppBar, Toolbar, Typography, Link as MaterialLink, IconButton, Drawer, List, ListItem } from '@material-ui/core';\nimport { useStyles } from './styles';\nimport { fetchData } from '../../api';\nimport { useEffect, useState, useContext } from 'react';\nimport NavbarLink from './NavbarLink';\nimport DrawerLink from './DrawerLink';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { PlanetContext } from '../../contexts/PlanetContext';\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Navbar() {\n  _s();\n\n  const [planets, setPlanets] = useState([]);\n  const [open, setOpen] = useState(false);\n  useEffect(() => {\n    const fetchPlanets = async () => {\n      const fetchedPlanets = await fetchData();\n      setPlanets(fetchedPlanets);\n    };\n\n    fetchPlanets();\n  }, [setPlanets]);\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      color: \"transparent\",\n      elevation: 0,\n      className: classes.root,\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        className: classes.wrapper,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          component: \"h1\",\n          className: classes.title,\n          children: /*#__PURE__*/_jsxDEV(MaterialLink, {\n            underline: \"none\",\n            color: \"inherit\",\n            component: RouterLink,\n            to: `/planets/`,\n            children: \"The planets\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.show,\n          children: planets && planets.map((singlePlanet, index) => /*#__PURE__*/_jsxDEV(MaterialLink, {\n            underline: \"none\",\n            color: \"inherit\",\n            component: RouterLink,\n            to: `/planets/${singlePlanet._id}`,\n            children: /*#__PURE__*/_jsxDEV(NavbarLink, {\n              singlePlanet: singlePlanet\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 37\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          \"aria-label\": \"open drawer\",\n          edge: \"start\",\n          className: classes.menu,\n          onClick: () => setOpen(true),\n          children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n      className: classes.drawer,\n      variant: \"persistent\",\n      anchor: \"left\",\n      open: open,\n      classes: {\n        paper: classes.drawer\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.drawerHeader,\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: () => setOpen(false),\n          className: classes.closeBtn,\n          children: /*#__PURE__*/_jsxDEV(ChevronLeftIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        component: \"h1\",\n        className: classes.drawerTitle,\n        children: \"the planets\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => setOpen(false),\n        children: /*#__PURE__*/_jsxDEV(List, {\n          children: planets && planets.map((singlePlanet, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n            className: classes.drawerList,\n            children: /*#__PURE__*/_jsxDEV(DrawerLink, {\n              singlePlanet: singlePlanet\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 37\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Navbar, \"hBn1RsRS3hqqjAaGcBlGBGPHeCg=\", false, function () {\n  return [useStyles];\n});\n\n_c = Navbar;\nexport default Navbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"sources":["D:/Code/FrontEnd/React/planets-stats/client/src/components/Navbar/Navbar.jsx"],"names":["AppBar","Toolbar","Typography","Link","MaterialLink","IconButton","Drawer","List","ListItem","useStyles","fetchData","useEffect","useState","useContext","NavbarLink","DrawerLink","RouterLink","PlanetContext","MenuIcon","ChevronLeftIcon","Navbar","planets","setPlanets","open","setOpen","fetchPlanets","fetchedPlanets","classes","root","wrapper","title","show","map","singlePlanet","index","_id","menu","drawer","paper","drawerHeader","closeBtn","drawerTitle","drawerList"],"mappings":"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","sourcesContent":["import { AppBar, Toolbar, Typography, Link as MaterialLink, IconButton, Drawer, List, ListItem } from '@material-ui/core';\r\nimport { useStyles } from './styles';\r\nimport { fetchData } from '../../api';\r\nimport { useEffect, useState, useContext } from 'react';\r\nimport NavbarLink from './NavbarLink';\r\nimport DrawerLink from './DrawerLink';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport { PlanetContext } from '../../contexts/PlanetContext';\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\n\r\nfunction Navbar() {\r\n    const [planets, setPlanets] = useState([]);\r\n    const [open, setOpen] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetchPlanets = async () => {\r\n            const fetchedPlanets = await fetchData();\r\n            setPlanets(fetchedPlanets);\r\n        }\r\n\r\n        fetchPlanets();\r\n    }, [setPlanets]);\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <>\r\n            <AppBar\r\n                position=\"static\"\r\n                color=\"transparent\"\r\n                elevation={0}\r\n                className={classes.root}\r\n            >\r\n                <Toolbar className={classes.wrapper}>\r\n                    <Typography\r\n                        variant=\"h5\"\r\n                        component=\"h1\"\r\n                        className={classes.title}\r\n                    >\r\n                        <MaterialLink\r\n                            underline=\"none\"\r\n                            color=\"inherit\"\r\n                            component={RouterLink} to={`/planets/`}\r\n                        >\r\n                            The planets\r\n                        </MaterialLink>\r\n                    </Typography>\r\n                    <Typography className={classes.show}>\r\n                        {\r\n                            planets && planets.map((singlePlanet, index) => (\r\n                                <MaterialLink\r\n                                    underline=\"none\"\r\n                                    color=\"inherit\"\r\n                                    key={index}\r\n                                    component={RouterLink} to={`/planets/${singlePlanet._id}`}\r\n                                >\r\n                                    <NavbarLink singlePlanet={singlePlanet} />\r\n                                </MaterialLink>\r\n                            ))\r\n                        }\r\n                    </Typography>\r\n                    <IconButton\r\n                        aria-label=\"open drawer\"\r\n                        edge=\"start\"\r\n                        className={classes.menu}\r\n                        onClick={() => setOpen(true)}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer\r\n                className={classes.drawer}\r\n                variant=\"persistent\"\r\n                anchor=\"left\"\r\n                open={open}\r\n                classes={{\r\n                    paper: classes.drawer\r\n                }}\r\n            >\r\n                <div className={classes.drawerHeader}>\r\n                    <IconButton\r\n                        onClick={() => setOpen(false)}\r\n                        className={classes.closeBtn}\r\n                    >\r\n                        <ChevronLeftIcon />\r\n                    </IconButton>\r\n                </div>\r\n                <Typography\r\n                    variant=\"h5\"\r\n                    component=\"h1\"\r\n                    className={classes.drawerTitle}\r\n                >\r\n                    the planets\r\n                </Typography>\r\n                <div onClick={() => setOpen(false)} >\r\n                    <List >\r\n                        {\r\n                            planets && planets.map((singlePlanet, index) => (\r\n                                <ListItem key={index} className={classes.drawerList}>\r\n                                    <DrawerLink singlePlanet={singlePlanet} />\r\n                                </ListItem>\r\n                            ))\r\n                        }\r\n                    </List>\r\n                </div>\r\n            </Drawer>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n"]},"metadata":{},"sourceType":"module"}