{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\FrontEnd\\\\React\\\\planets-stats\\\\client\\\\src\\\\components\\\\Main\\\\Main.jsx\",\n    _s = $RefreshSig$();\n\nimport { useStyles } from \"./styles\";\nimport { Grid, Container, Typography, Link } from '@material-ui/core';\nimport { useParams } from 'react-router-dom';\nimport { PlanetContext } from '../../contexts/PlanetContext';\nimport { useContext, useEffect, useState } from 'react';\nimport axios from \"axios\";\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport Stats from \"../Stats/Stats\";\nimport { fetchSinglePlanet } from '../../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Main() {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const {\n    planet,\n    setPlanet\n  } = useContext(PlanetContext);\n  const [overview, setOverview] = useState(true);\n  const [internal, setInternal] = useState(false);\n  const [geology, setGeology] = useState(false);\n  const [color, setColor] = useState('');\n  useEffect(() => {\n    const fetchPlanet = async () => {\n      if (id) {\n        try {\n          const data = await fetchSinglePlanet(id);\n          setPlanet(data);\n          setColor(data.color);\n        } catch (err) {\n          console.error(err);\n        }\n      } else {\n        try {\n          const data = await fetchSinglePlanet('63c2d322d40de5b4bd70d1f9');\n          setPlanet(data);\n          setColor(data.color);\n        } catch (err) {\n          console.error(err);\n        }\n      }\n    };\n\n    fetchPlanet();\n  }, [id, setPlanet]);\n  console.log(planet);\n\n  const handleClick = type => {\n    if (type === 'overview') {\n      setOverview(true);\n      setInternal(false);\n      setGeology(false);\n    } else if (type === 'internal') {\n      setOverview(false);\n      setInternal(true);\n      setGeology(false);\n    } else {\n      setOverview(false);\n      setInternal(false);\n      setGeology(true);\n    }\n  };\n\n  const classes = useStyles({\n    color\n  });\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: classes.root,\n    children: planet && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        justifyContent: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 8,\n          lg: 8,\n          className: classes.images,\n          children: [overview && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: planet.images.planet,\n            className: classes.img,\n            alt: \"planet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 38\n          }, this), internal && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: planet.images.internal,\n            className: classes.img,\n            alt: \"internal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 38\n          }, this), geology && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.imgWrap,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: planet.images.geology,\n              className: classes.smallImg,\n              alt: \"geology\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: planet.images.planet,\n              className: classes.img,\n              alt: \"geology\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 4,\n          lg: 4,\n          className: classes.content,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h1\",\n            component: \"h2\",\n            className: classes.title,\n            gutterBottom: true,\n            children: planet.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.body,\n            children: [overview && planet.overview.content, internal && planet.structure.content, geology && planet.geology.content]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: [overview && /*#__PURE__*/_jsxDEV(Link, {\n              href: planet.overview.source,\n              underline: \"none\",\n              color: \"inherit\",\n              children: [\"Source :\", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: classes.wikipedia,\n                children: [\"Wikipedia\", /*#__PURE__*/_jsxDEV(LaunchIcon, {\n                  className: classes.launch\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 42\n            }, this), internal && /*#__PURE__*/_jsxDEV(Link, {\n              href: planet.structure.source,\n              underline: \"none\",\n              color: \"inherit\",\n              children: [\"Source :\", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: classes.wikipedia,\n                children: [\"Wikipedia\", /*#__PURE__*/_jsxDEV(LaunchIcon, {\n                  className: classes.launch\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 42\n            }, this), geology && /*#__PURE__*/_jsxDEV(Link, {\n              href: planet.geology.source,\n              underline: \"none\",\n              color: \"inherit\",\n              children: [\"Source :\", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: classes.wikipedia,\n                children: [\"Wikipedia\", /*#__PURE__*/_jsxDEV(LaunchIcon, {\n                  className: classes.launch\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              onClick: () => handleClick('overview'),\n              underline: \"none\",\n              color: \"inherit\",\n              className: overview ? `${classes.btn} ${classes.active}` : classes.btn,\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: classes.number,\n                children: \"01\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 33\n              }, this), \"overview\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              onClick: () => handleClick('internal'),\n              underline: \"none\",\n              color: \"inherit\",\n              className: internal ? `${classes.btn} ${classes.active}` : classes.btn,\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: classes.number,\n                children: \"02\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 33\n              }, this), \"internal structure\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              onClick: () => handleClick('geology'),\n              underline: \"none\",\n              color: \"inherit\",\n              className: geology ? `${classes.btn} ${classes.active}` : classes.btn,\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: classes.number,\n                children: \"03\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 33\n              }, this), \"surface geology\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Stats, {\n        planet: planet\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Main, \"tLPTE4UPe2Zy/bmlLGE38h0VH/Y=\", false, function () {\n  return [useParams, useStyles];\n});\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["D:/Code/FrontEnd/React/planets-stats/client/src/components/Main/Main.jsx"],"names":["useStyles","Grid","Container","Typography","Link","useParams","PlanetContext","useContext","useEffect","useState","axios","LaunchIcon","Stats","fetchSinglePlanet","Main","id","planet","setPlanet","overview","setOverview","internal","setInternal","geology","setGeology","color","setColor","fetchPlanet","data","err","console","error","log","handleClick","type","classes","root","images","img","imgWrap","smallImg","content","title","name","body","structure","source","wikipedia","launch","btn","active","number"],"mappings":"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","sourcesContent":["import { useStyles } from \"./styles\";\r\nimport { Grid, Container, Typography, Link } from '@material-ui/core';\r\nimport { useParams } from 'react-router-dom';\r\nimport { PlanetContext } from '../../contexts/PlanetContext';\r\nimport { useContext, useEffect, useState } from 'react';\r\nimport axios from \"axios\";\r\nimport LaunchIcon from '@material-ui/icons/Launch';\r\nimport Stats from \"../Stats/Stats\";\r\n\r\nimport { fetchSinglePlanet } from '../../api';\r\n\r\nfunction Main() {\r\n    const { id } = useParams();\r\n    const { planet, setPlanet } = useContext(PlanetContext);\r\n    const [overview, setOverview] = useState(true);\r\n    const [internal, setInternal] = useState(false);\r\n    const [geology, setGeology] = useState(false);\r\n    const [color, setColor] = useState('');\r\n\r\n    useEffect(() => {\r\n        const fetchPlanet = async () => {\r\n            if (id) {\r\n                try {\r\n                    const data = await fetchSinglePlanet(id);\r\n                    setPlanet(data);\r\n                    setColor(data.color);\r\n                }\r\n                catch (err) {\r\n                    console.error(err);\r\n                }\r\n            } else {\r\n                try {\r\n                    const data = await fetchSinglePlanet('63c2d322d40de5b4bd70d1f9');\r\n                    setPlanet(data);\r\n                    setColor(data.color);\r\n                }\r\n                catch (err) {\r\n                    console.error(err);\r\n                }\r\n            }\r\n\r\n        }\r\n        fetchPlanet();\r\n    }, [id, setPlanet]);\r\n\r\n    console.log(planet)\r\n    const handleClick = (type) => {\r\n        if (type === 'overview') {\r\n            setOverview(true);\r\n            setInternal(false);\r\n            setGeology(false);\r\n        } else if (type === 'internal') {\r\n            setOverview(false);\r\n            setInternal(true);\r\n            setGeology(false);\r\n        } else {\r\n            setOverview(false);\r\n            setInternal(false);\r\n            setGeology(true);\r\n        }\r\n    }\r\n\r\n\r\n    const classes = useStyles({ color });\r\n    return (\r\n        <Container className={classes.root}>\r\n            {planet && <>\r\n                <Grid container justifyContent=\"center\">\r\n                    <Grid item md={8} lg={8} className={classes.images}>\r\n                        {overview && <img src={planet.images.planet} className={classes.img} alt=\"planet\" />}\r\n                        {internal && <img src={planet.images.internal} className={classes.img} alt=\"internal\" />}\r\n                        {geology &&\r\n                            <div className={classes.imgWrap}>\r\n                                <img src={planet.images.geology}\r\n                                    className={classes.smallImg}\r\n                                    alt=\"geology\" />\r\n                                <img src={planet.images.planet}\r\n                                    className={classes.img}\r\n                                    alt=\"geology\" />\r\n                            </div>\r\n                        }\r\n                    </Grid>\r\n                    <Grid item md={4} lg={4} className={classes.content}>\r\n                        <Typography\r\n                            variant=\"h1\"\r\n                            component=\"h2\"\r\n                            className={classes.title}\r\n                            gutterBottom\r\n                        >\r\n                            {planet.name}\r\n                        </Typography>\r\n                        <Typography\r\n                            className={classes.body}\r\n                        >\r\n                            {overview && planet.overview.content}\r\n                            {internal && planet.structure.content}\r\n                            {geology && planet.geology.content}\r\n                        </Typography>\r\n                        <Typography\r\n                            variant=\"h6\"\r\n                        >\r\n                            {overview && <Link\r\n                                href={planet.overview.source}\r\n                                underline=\"none\"\r\n                                color='inherit'\r\n                            >\r\n                                Source :\r\n                                <span className={classes.wikipedia}>\r\n                                    Wikipedia\r\n                                    <LaunchIcon className={classes.launch} />\r\n                                </span>\r\n                            </Link>\r\n                            }\r\n                            {internal && <Link\r\n                                href={planet.structure.source}\r\n                                underline=\"none\"\r\n                                color='inherit'\r\n                            >\r\n                                Source :\r\n                                <span className={classes.wikipedia}>\r\n                                    Wikipedia\r\n                                    <LaunchIcon className={classes.launch} />\r\n                                </span>\r\n                            </Link>\r\n                            }\r\n                            {geology && <Link\r\n                                href={planet.geology.source}\r\n                                underline=\"none\"\r\n                                color='inherit'\r\n                            >\r\n                                Source :\r\n                                <span className={classes.wikipedia}>\r\n                                    Wikipedia\r\n                                    <LaunchIcon className={classes.launch} />\r\n                                </span>\r\n                            </Link>\r\n                            }\r\n                        </Typography>\r\n                        <Typography variant=\"h6\">\r\n                            <Link\r\n                                onClick={() => handleClick('overview')}\r\n                                underline=\"none\"\r\n                                color='inherit'\r\n                                className={overview ? `${classes.btn} ${classes.active}` : classes.btn}\r\n                            >\r\n                                <span className={classes.number}>\r\n                                    01\r\n                                </span>overview\r\n                            </Link>\r\n                            <Link\r\n                                onClick={() => handleClick('internal')}\r\n                                underline=\"none\"\r\n                                color='inherit'\r\n                                className={internal ? `${classes.btn} ${classes.active}` : classes.btn}\r\n                            >\r\n                                <span className={classes.number}>\r\n                                    02\r\n                                </span>internal structure\r\n                            </Link>\r\n                            <Link\r\n                                onClick={() => handleClick('geology')}\r\n                                underline=\"none\"\r\n                                color='inherit'\r\n                                className={geology ? `${classes.btn} ${classes.active}` : classes.btn}\r\n                            >\r\n                                <span className={classes.number}>\r\n                                    03\r\n                                </span>surface geology\r\n                            </Link>\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n                <Stats planet={planet} />\r\n            </>}\r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Main\r\n"]},"metadata":{},"sourceType":"module"}